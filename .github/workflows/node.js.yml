# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci --legacy-peer-deps
    - run: npm run build --if-present

    - name: Cache build files
      uses: actions/cache@v2
      id: build-cache
      with:
        path: |
          dist
        key: nim-cache-build-${{ github.event.push.head.sha }}

  test:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Cache build files
      uses: actions/cache@v2
      id: build-cache
      with:
        path: |
          dist
        key: nim-cache-build-${{ github.event.push.head.sha }}
    - run: npm ci --legacy-peer-deps

    - name: Build
      if: steps.build-cache.outputs.cache-hit != 'true'
      run: npm run build --if-present

    - run: npx playwright install-deps
    - run: xvfb-run npm test

  package:
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Cache build files
      uses: actions/cache@v2
      id: build-cache
      with:
        path: |
          dist
        key: nim-cache-build-${{ github.event.push.head.sha }}
    - run: npm ci --legacy-peer-deps

    - name: Build
      if: steps.build-cache.outputs.cache-hit != 'true'
      run: npm run build --if-present
    
    - name: Update manifest
      run: ./scripts/updateManifest.sh
      shell: bash

    - name: Zip
      run: zip ${GITHUB_SHA}.zip dist src/*.js manifest.json _locales
      shell: bash

    - name: Upload zip artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${GITHUB_SHA}.zip
        path: ${GITHUB_SHA}.zip